---
// src/pages/blog/[slug].astro

import Layout from '../../layouts/Layout.astro';
// 1. Import the type for CollectionEntry
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import Giscus from '../../components/Giscus.astro';

/**
 * Generates a static page for each blog post in the collection at build time.
 * This is Astro's implementation of Static Site Generation (SSG) for dynamic routes.
 * @see https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
 */
export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  // 2. We also add an explicit type for 'post' here
  return allPosts.map((post: CollectionEntry<'blog'>) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// 3. We define the type of props that this page expects
interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <main class="container my-5">
    <div class="row justify-content-center">
      <div class="col-lg-8">
        {
          post.data.coverImage && (
            <Image
              src={post.data.coverImage}
              alt={post.data.coverAlt}
              widths={[800, 1200]}
              sizes="(max-width: 800px) 100vw, 800px"
              priority
              format="avif"
              quality={80}
              class="img-fluid rounded mb-4"
              transition:name={`blog-image-${post.slug}`}
            />
          )
        }

        <article class="prose">
          <h1 class="display-4">{post.data.title}</h1>
          <p class="text-muted">
            Opublikowano: {
              post.data.pubDate.toLocaleDateString('pl-PL', {
                day: 'numeric',
                month: 'long',
                year: 'numeric',
              })
            }
          </p>
          <hr />

          {
            /**
             * The main content of the post is explicitly ignored by Pagefind.
             * This is a crucial optimization to keep the search index small and relevant,
             * as our search functionality is intentionally limited to post titles and descriptions.
             * Those are indexed from the main blog listing page (`/blog`).
             */
          }
          <div data-pagefind-ignore>
            <Content />
          </div>
          {
            /**
             * Giscus comments section.
             * The Giscus component handles loading and updating the comment thread
             * based on the current page's pathname.
             */
          }
          <hr class="my-5" />
          <h2 class="mb-4">Komentarze</h2>
          <Giscus />
        </article>
      </div>
    </div>
  </main>
</Layout>
