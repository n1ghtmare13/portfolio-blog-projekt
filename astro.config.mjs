// file: astro.config.mjs
// @ts-check
import { defineConfig } from 'astro/config';

import sitemap from '@astrojs/sitemap';
import pagefind from 'astro-pagefind';
import path from 'node:path';
import vitePwa from '@vite-pwa/astro';

/**
 * @see https://astro.build/config
 */
export default defineConfig({
  /**
   * Defines the canonical URL for the project.
   * Required for sitemap and other SEO integrations.
   */
  site: 'https://devfolio.pl',

  prefetch: {
    prefetchAll: true,
    defaultStrategy: 'viewport',
  },

  integrations: [
    sitemap(),
    pagefind(),
    // Here is the full PWA configuration
    vitePwa({
      // Defines the update strategy for the service worker. 'prompt' is best for UX.
      // It shows a notification to the user when a new version is available.
      registerType: 'prompt',

      // We set this to false because we already have our own custom manifest file in /public.
      // This prevents the integration from generating a new one.
      manifest: false,

      // Workbox configuration for generating the service worker.
      workbox: {
        // Defines which files should be pre-cached for offline access.
        globPatterns: [
          '**/*.{html,js,css,woff,woff2}',
          '**/*.{svg,png,jpg,jpeg,gif,webp,avif}',
        ],
        navigateFallback: '/404',
      },

      // Development options.
      devOptions: {
        // Enables the PWA and service worker during local development for easy testing.
        enabled: true,
      },
    }),
  ],

  markdown: {
    shikiConfig: {
      theme: 'dracula',
    },
  },

  vite: {
    css: {
      preprocessorOptions: {
        scss: {
          // Suppresses `@use` warnings from dependencies, cleaning up build logs.
          quietDeps: true,
        },
      },
    },
    build: {
      rollupOptions: {
        /**
         * Prevents Vite from bundling the Pagefind script. This is critical because
         * the script is generated by the Pagefind integration *after* Vite's
         * bundling analysis, and it must be loaded as a separate static asset.
         */
        external: ['/pagefind/pagefind.js'],
      },
    },
    server: {
      fs: {
        allow: [
          process.cwd(),
          path.resolve(process.cwd(), './src/content/blog'),
        ],
      },
      watch: {
        ignored: ['**/*.crswap', '**/*.(jpeg|jpg|png|gif|svg|webp|avif)'],
      },
    },
  },
});
